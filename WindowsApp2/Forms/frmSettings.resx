<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IAPgjDAz4Pw8P/P//B////4f//////////8=
</value>
  </data>
</root>